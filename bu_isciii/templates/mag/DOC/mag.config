/*
    HPC XTUTATIS CONFIGURATION
*/

singularity {
        enabled                 = true
        autoMounts              = true
        singularity.cacheDir    = '/data/bi/pipelines/singularity-images'
}

process {
	executor        = 'slurm'
	queue           = 'middle_idx'
	jobName         = { "$task.name - $task.hash" }
	conda           = null

	errorStrategy   = { task.exitStatus in ((130..145) + 104) ? 'retry' : 'finish' }

	withName:'SPADES|MEGAHIT' {
		errorStrategy = { task.exitStatus in [143,137,21,12,1] ? 'retry' : 'finish' }
		maxRetries    = 2
		cpus = { 10 * task.attempt }
		memory = { 64.GB * task.attempt }
		time = { 24.h }
	}
	withName:'MAXBIN2' {
		// often fails when insufficient information, so we allow it to gracefully fail without failing the pipeline
		errorStrategy = { task.exitStatus in [ 1, 255 ] ? 'ignore' : 'retry' }
		time          = { 8.h * task.attempt }
	}
	// TODO: This bining tool takes ~24h to finish... skip was added in lablog, however it can be enabeled.
	// withName:'CONCOCT_CONCOCT' {
	// 	errorStrategy = { task.exitStatus in [140] ? 'retry' : 'finish' }
	// 	maxRetries = 2
	// 	cpus = { 8 * task.attempt }
	// 	memory = { 64.GB * task.attempt }
	// 	time = { 24.h * task.attempt }
	// }
	withName:'CHECKM_LINEAGEWF' {
		errorStrategy = { task.exitStatus in [1] ? 'retry' : 'finish' }
                maxRetries = 3
                cpus = { 8 * task.attempt }
                memory = { 32.GB * task.attempt }
                time = { 4.h * task.attempt }
	}
	withName:'BOWTIE2_PHIX_REMOVAL_BUILD'{
		time = 18.h
	}
}

params {
	max_memory = 376.GB
	max_cpus = 32
	max_time = '48.h'
}

/*
    CUSTOM OUTPUT FOLDER STRUCTURE -- modules.config
*/
params { publish_dir_mode = 'copy' }
process {
	withName: 'MULTIQC' {
        publishDir = [
            path: { "${params.outdir}/99-stats" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> 
				if (filename.equals('versions.yml') || filename.endsWith('.csv')) {
                    null
				} else {
					filename
                }
            }
		]
	}
}
